name: release

on:
  push:
    tags:
      - "*"

jobs:
  create:
    name: Create Release
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu-build-gcc
    outputs:
      version: ${{ steps.prep.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Get version
        id: prep
        run: |
          echo ::set-output name=version::$(git describe --tag)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: WasmEdge-TensorFlow-Tools ${{ steps.prep.outputs.version }}
          body_path: .CurrentChangelog.md
          draft: false
          prerelease: false
  build_and_upload_manylinux2014_x86_64:
    name: Build and upload WasmEdge-TensorFlow-Tools on manylinux2014_x86_64 platform
    needs: create
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:manylinux2014_x86_64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build manylinux2014_x86_64 package
        run: |
          curl -s -L -O --remote-name-all https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.tar.bz2
          bzip2 -dc boost_1_75_0.tar.bz2 | tar -xf -
          export PATH="/toolchain/bin:$PATH"
          export CC=gcc
          export CXX=g++
          rm -rf build
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBOOST_INCLUDEDIR=./boost_1_75_0/ .
          cmake --build build
          cd build/tools
          tar -zcvf WasmEdge-tf-tools.tar.gz show-tflite-tensor wasmedge-tensorflow wasmedge-tensorflow-lite wasmedgec-tensorflow download_dependencies_all.sh download_dependencies_tf.sh download_dependencies_tflite.sh
          tar Jcvf WasmEdge-tf-tools.tar.xz show-tflite-tensor wasmedge-tensorflow wasmedge-tensorflow-lite wasmedgec-tensorflow download_dependencies_all.sh download_dependencies_tf.sh download_dependencies_tflite.sh
          cd ../..
          mv build/tools/WasmEdge-tf-tools.tar.gz WasmEdge-tf-tools.tar.gz
          mv build/tools/WasmEdge-tf-tools.tar.xz WasmEdge-tf-tools.tar.xz
      - name: Upload WasmEdge-tensorflow-tools manylinux2014_x86_64 tar.gz package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create.outputs.upload_url }}
          asset_path: WasmEdge-tf-tools.tar.gz
          asset_name: WasmEdge-tensorflow-tools-${{ needs.create.outputs.version }}-manylinux2014_x86_64.tar.gz
          asset_content_type: application/x-gzip
      - name: Upload WasmEdge-tensorflow-tools manylinux2014_x86_64 tar.xz package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create.outputs.upload_url }}
          asset_path: WasmEdge-tf-tools.tar.xz
          asset_name: WasmEdge-tensorflow-tools-${{ needs.create.outputs.version }}-manylinux2014_x86_64.tar.xz
          asset_content_type: application/x-xz
